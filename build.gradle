buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'maven-publish'
    id 'java'
    id 'jacoco'
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url = uri(rootProject.properties["reposilite.release"])
    }

    maven {
        url = uri(rootProject.properties["reposilite.spigot"])
    }
}

dependencies {
//    compileOnly group: 'org.spigotmc', name: 'spigot', version: '1.12.2'
    compileOnly("skywolf46:exutil:1.61.7")
    compileOnly(files("O:\\Servers\\주문제작\\아이리스\\cache\\patched_1.12.2.jar"))
    compileOnly group: 'skywolf46', name: 'exutil', version: 'latest.release'
    testCompileOnly group: 'skywolf46', name: 'exutil', version: 'latest.release'

}

test {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.6"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

processResources {
    filesMatching(["loaderDeclaration.properties", "plugin.yml"]*.toString()) {
        expand(["version": rootProject.properties["version"] as String])
    }
    outputs.upToDateWhen { false }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


publishing {
    repositories {
        maven {
            name = "Reposilite"
            url(rootProject.properties["snapshot"] as Boolean ? rootProject.properties['reposilite.snapshot'] as String : rootProject.properties['reposilite.release'] as String)
            credentials {
                username rootProject.properties['reposilite.user'] as String
                password rootProject.properties['reposilite.token'] as String
            }
        }
    }
    publications {
        create("jar", MavenPublication) {

            groupId 'skywolf46'
            artifactId "refnbt"
            version rootProject.properties['version'] as String
            from components.java
            pom.withXml { xml ->
                asNode().remove(asNode().getAt("dependencies"))
            }
        }
    }
}

dependencies {
}